import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';

class HomeScreen extends StatefulWidget {
  const HomeScreen({super.key});

  @override
  State<HomeScreen> createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  String? phone;

  @override
  void initState() {
    super.initState();
    loadPhone();
  }

  Future<void> loadPhone() async {
    final prefs = await SharedPreferences.getInstance();
    setState(() {
      phone = prefs.getString('phone') ?? '';
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!'),
        backgroundColor: Colors.teal,
      ),
      body: ListView(
        padding: const EdgeInsets.all(16),
        children: [
          // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
          Text(
            '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ${phone != null && phone!.isNotEmpty ? ', $phone' : ''} üëã',
            style: const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
          ),
          const SizedBox(height: 16),

          // –ë–∞–Ω–Ω–µ—Ä / –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
          ClipRRect(
            borderRadius: BorderRadius.circular(12),
            child: Image.asset(
              'assets/images/clinic_banner.jpg',
              height: 160,
              fit: BoxFit.cover,
            ),
          ),
          const SizedBox(height: 20),

          // –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
          Wrap(
            spacing: 12,
            runSpacing: 12,
            children: [
              _buildQuickAccess(
                icon: Icons.calendar_today,
                label: '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è',
                onTap: () => Navigator.pushNamed(context, '/appointment'),
              ),
              _buildQuickAccess(
                icon: Icons.medical_services,
                label: '–£—Å–ª—É–≥–∏',
                onTap: () => Navigator.pushNamed(context, '/services'),
              ),
              _buildQuickAccess(
                icon: Icons.info_outline,
                label: '–û –∫–ª–∏–Ω–∏–∫–µ',
                onTap: () => Navigator.pushNamed(context, '/about'),
              ),
              _buildQuickAccess(
                icon: Icons.person,
                label: '–ü—Ä–æ—Ñ–∏–ª—å',
                onTap: () => Navigator.pushNamed(context, '/profile'),
              ),
            ],
          ),

          const SizedBox(height: 30),

          // –ù–æ–≤–æ—Å—Ç–∏ / –∞–∫—Ü–∏–∏
          const Text(
            '–ù–æ–≤–æ—Å—Ç–∏ –∏ –∞–∫—Ü–∏–∏',
            style: TextStyle(fontSize: 18, fontWeight: FontWeight.w600),
          ),
          const SizedBox(height: 10),
          _buildPromoCard(
            title: '–°–∫–∏–¥–∫–∞ 20% –Ω–∞ —á–∏—Å—Ç–∫—É –∑—É–±–æ–≤!',
            subtitle: '–¢–æ–ª—å–∫–æ –¥–æ –∫–æ–Ω—Ü–∞ –º–µ—Å—è—Ü–∞.',
          ),
          _buildPromoCard(
            title: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–∞',
            subtitle: '–î–ª—è –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤.',
          ),

          const SizedBox(height: 30),

          // –ö–æ–Ω—Ç–∞–∫—Ç—ã –∏ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã
          const Text(
            '–ö–æ–Ω—Ç–∞–∫—Ç—ã',
            style: TextStyle(fontSize: 18, fontWeight: FontWeight.w600),
          ),
          const SizedBox(height: 10),
          const Text('üìç –£–ª. –£–ª—ã–±–∫–∏, 12, –≥. –ó—É–±–æ–≤—Å–∫'),
          const Text('üìû +7 (999) 123-45-67'),
          const Text('üïí –ü–Ω‚Äì–°–±: 9:00 ‚Äì 20:00'),
        ],
      ),
    );
  }

  Widget _buildQuickAccess({
    required IconData icon,
    required String label,
    required VoidCallback onTap,
  }) {
    return GestureDetector(
      onTap: onTap,
      child: Container(
        width: (MediaQuery.of(context).size.width - 52) / 2,
        padding: const EdgeInsets.all(16),
        decoration: BoxDecoration(
          color: Colors.teal.shade50,
          borderRadius: BorderRadius.circular(12),
          border: Border.all(color: Colors.teal.shade100),
        ),
        child: Column(
          children: [
            Icon(icon, size: 30, color: Colors.teal),
            const SizedBox(height: 8),
            Text(label, textAlign: TextAlign.center),
          ],
        ),
      ),
    );
  }

  Widget _buildPromoCard({required String title, required String subtitle}) {
    return Card(
      margin: const EdgeInsets.only(bottom: 12),
      child: ListTile(
        leading: const Icon(Icons.local_offer, color: Colors.teal),
        title: Text(title),
        subtitle: Text(subtitle),
      ),
    );
  }
}